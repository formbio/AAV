manifest {
  name            = 'laava'
  author          = 'formbio'
  homePage        = 'https://github.com/formbio/laava'
  description     = 'Long-read AAV Analysis'
  mainScript      = 'main.nf'
  nextflowVersion = '>=23.04.2'
  version         = 'v2.5.0'
}

params {
  // Workflow inputs
  seq_reads = null
  vector_type = "unspecified"
  vector_bed = null
  vector_fa = null
  packaging_fa = null
  host_fa = null
  repcap_name = ''
  flipflop_name = ''
  flipflop_fa = null
  // "full" read classification thresholds
  target_gap_threshold = 200
  max_allowed_outside_vector = 100
  max_allowed_missing_flanking = 100

  // Required for Form Bio workflows
  output = 'output'

  // For testing
  citest=false
  // use ":latest" for testing

  containerrepo = 'ghcr.io/formbio'
  container_version="@sha256:ad2e6aa7249a712d28027617e3075a492e9a81a0c49dc50cd83d209a4ed98df8"
}

process {
  executor = 'google-lifesciences' //'google-batch'
  maxRetries = 3
  maxErrors = '-1'
  maxForks = 50
  cache = 'lenient'
  // Only has effect on cloud
  machineType = 'e2-highmem-8'
  disk = '500 GB'
  //container = "${params.containerrepo}/laava${params.container_version}"
  cpus = 4
  //shell = ['/bin/bash', '-euo', 'pipefail']
  withLabel: laava {
    container = "${params.containerrepo}/laava${params.container_version}"
  }
  withLabel: laavasupp {
    container = "${params.containerrepo}/laavasupp${params.container_version}"
  }
}


// Execution environments

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

docker {
  enabled = true
  runOptions = "--gpus all"
}

executor {
  queueSize = 50
  name = 'google-lifesciences'
  submitRateLimit = '10sec'
  pollInterval = '30 sec'
}

google {
  region = 'us-central1'
  //cloudprj = 'xx-sbx'
  //project = "${params.cloudprj}"

  batch.bootDiskSize = '100.GB'
  batch.debug = true
  batch.sshDaemon = true

  lifeSciences.bootDiskSize = '100.GB'
  lifeSciences.debug = true
  lifeSciences.sshDaemon = true
}

profiles {
  // For local Nextflow development
  local {
    params.output = 'workflow-outputs/output'
    process.executor = 'local'
    process.queue = 10
    docker.runOptions = ''
    workDir = 'workflow-outputs/work'
    process.container = "ghcr.io/formbio/laava:latest"

    trace {
        enabled = true
        overwrite = true
        file = 'nextflow_logs/pipeline_trace.txt'
        field = 'task_id,native_id,process,name,status,exit,submit,start,complete,duration,realtime'
    }
    timeline {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/timeline.html'
    }
    report {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/report.html'
    }
    dag {
        enabled = true
        overwrite = true
        file = 'workflow-outputs/nextflow_logs/pipeline_dag_${trace_timestamp}.svg'
    }
  }

  // Cloud platforms
  googlebatch {
    process {
      executor = 'google-batch'
    }
  }

  googlelifesciences {
    process {
      executor = 'google-lifesciences'
    }
  }
}
